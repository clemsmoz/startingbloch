/*
 * ================================================================================================
 * DTOs CONTACTS - PERSONNES R√âF√âRENTES PROPRI√âT√â INTELLECTUELLE
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * G√®re transfert donn√©es contacts personnels dans √©cosyst√®me brevets.
 * Facilite communication directe avec interlocuteurs sp√©cialis√©s clients/cabinets.
 * 
 * MOD√àLES COMMUNICATION :
 * ======================
 * üìã CONTACT COMPLET ‚Üí ContactDto avec multiples moyens communication
 * ‚ûï CR√âATION ‚Üí CreateContactDto avec validations professionnelles
 * ‚úèÔ∏è MODIFICATION ‚Üí UpdateContactDto flexible et optionnelle
 * 
 * FEATURES AVANC√âES :
 * ==================
 * ‚úÖ Emails/t√©l√©phones multiples (collections JSON)
 * ‚úÖ R√¥les sp√©cialis√©s (technique, juridique, commercial)
 * ‚úÖ Association flexible client OU cabinet
 * ‚úÖ Audit trail cr√©ation/modification
 * 
 * ================================================================================================
 */

using System.ComponentModel.DataAnnotations;

namespace StartingBloch.Backend.DTOs;

/// <summary>
/// DTO contact professionnel avec moyens communication multiples.
/// Personne r√©f√©rente sp√©cialis√©e dans √©cosyst√®me propri√©t√© intellectuelle.
/// Support emails/t√©l√©phones multiples pour flexibilit√© organisationnelle.
/// </summary>
public class ContactDto
{
    /// <summary>Identifiant unique contact syst√®me StartingBloch.</summary>
    public int Id { get; set; }
    
    /// <summary>Nom famille contact pour identification officielle.</summary>
    public string? Nom { get; set; }
    
    /// <summary>Pr√©nom contact pour personnalisation relation.</summary>
    public string? Prenom { get; set; }
    
    /// <summary>Email principal contact pour communication rapide.</summary>
    public string? Email { get; set; }
    
    /// <summary>T√©l√©phone principal contact pour urgences.</summary>
    public string? Telephone { get; set; }
    
    /// <summary>R√¥le sp√©cialis√© contact (technique, juridique, commercial).</summary>
    public string? Role { get; set; }
    
    /// <summary>Identifiant cabinet employeur si applicable.</summary>
    public int? IdCabinet { get; set; }
    
    /// <summary>Identifiant client employeur si applicable.</summary>
    public int? IdClient { get; set; }
    
    /// <summary>Date cr√©ation UTC contact pour audit trail.</summary>
    public DateTime CreatedAt { get; set; }
    
    /// <summary>Date modification UTC contact pour tra√ßabilit√©.</summary>
    public DateTime UpdatedAt { get; set; }
    
    /// <summary>Collection emails multiples stockage JSON flexible.</summary>
    public List<string> Emails { get; set; } = new();
    
    /// <summary>Collection t√©l√©phones multiples stockage JSON flexible.</summary>
    public List<string> Phones { get; set; } = new();
    
    /// <summary>Collection r√¥les multiples pour sp√©cialisations diverses.</summary>
    public List<string> Roles { get; set; } = new();
    
    /// <summary>Nom cabinet employeur pour affichage interface (optionnel).</summary>
    public string? CabinetNom { get; set; }
    
    /// <summary>Nom client employeur pour affichage interface (optionnel).</summary>
    public string? ClientNom { get; set; }
}

/// <summary>
/// DTO cr√©ation nouveau contact avec validations professionnelles strictes.
/// Assure qualit√© donn√©es contact et relations coh√©rentes client/cabinet.
/// Collections optionnelles pour moyens communication multiples d√®s cr√©ation.
/// </summary>
public class CreateContactDto
{
    /// <summary>
    /// Nom contact OBLIGATOIRE pour identification professionnelle.
    /// √âl√©ment central r√©f√©rencement et communication formelle.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le nom ne peut pas d√©passer 100 caract√®res")]
    public string? Nom { get; set; }

    /// <summary>
    /// Pr√©nom contact optionnel pour personnalisation relation.
    /// Facilite communication directe et convivialit√© professionnelle.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le pr√©nom ne peut pas d√©passer 100 caract√®res")]
    public string? Prenom { get; set; }

    /// <summary>
    /// Email principal contact avec validation format stricte.
    /// Canal privil√©gi√© communications √©lectroniques s√©curis√©es.
    /// </summary>
    [EmailAddress(ErrorMessage = "Format d'email invalide")]
    [StringLength(255, ErrorMessage = "L'email ne peut pas d√©passer 255 caract√®res")]
    public string? Email { get; set; }

    /// <summary>
    /// T√©l√©phone principal contact pour communications urgentes.
    /// Format international flexible selon standards g√©ographiques.
    /// </summary>
    [StringLength(50, ErrorMessage = "Le t√©l√©phone ne peut pas d√©passer 50 caract√®res")]
    public string? Telephone { get; set; }

    /// <summary>
    /// R√¥le sp√©cialis√© contact dans organisation (technique, juridique, etc.).
    /// D√©finit expertise et domaine intervention principal.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le r√¥le ne peut pas d√©passer 100 caract√®res")]
    public string? Role { get; set; }

    /// <summary>
    /// Identifiant cabinet employeur si contact externe mandataire.
    /// Association exclusive avec IdClient pour coh√©rence organisation.
    /// </summary>
    public int? IdCabinet { get; set; }

    /// <summary>
    /// Identifiant client employeur si contact interne organisation.
    /// Association exclusive avec IdCabinet pour coh√©rence organisation.
    /// </summary>
    public int? IdClient { get; set; }

    /// <summary>
    /// Collection emails multiples pour communication diversifi√©e.
    /// Stockage JSON flexible selon besoins organisationnels.
    /// </summary>
    public List<string>? Emails { get; set; }
    
    /// <summary>
    /// Collection t√©l√©phones multiples pour accessibilit√© optimale.
    /// Support num√©ros fixes, mobiles, internationaux selon contexte.
    /// </summary>
    public List<string>? Phones { get; set; }
    
    /// <summary>
    /// Collection r√¥les multiples pour expertise transversale.
    /// Permet sp√©cialisations diverses dans m√™me organisation.
    /// </summary>
    public List<string>? Roles { get; set; }
}

/// <summary>
/// DTO modification contact existant avec validations maintenues.
/// Pr√©serve contraintes qualit√© donn√©es tout en permettant √©volution.
/// Flexibilit√© mise √† jour informations et moyens communication.
/// </summary>
public class UpdateContactDto
{
    /// <summary>
    /// Nom contact OBLIGATOIRE maintenu en modification.
    /// Identification professionnelle ne peut √™tre supprim√©e.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le nom ne peut pas d√©passer 100 caract√®res")]
    public string? Nom { get; set; }

    /// <summary>
    /// Pr√©nom contact modifiable pour √©volution personnalisation.
    /// Mise √† jour flexible selon pr√©f√©rences relationnelles.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le pr√©nom ne peut pas d√©passer 100 caract√®res")]
    public string? Prenom { get; set; }

    /// <summary>
    /// Email principal modifiable avec validation format maintenue.
    /// Actualisation canaux communication selon √©volutions organisation.
    /// </summary>
    [EmailAddress(ErrorMessage = "Format d'email invalide")]
    [StringLength(255, ErrorMessage = "L'email ne peut pas d√©passer 255 caract√®res")]
    public string? Email { get; set; }

    /// <summary>
    /// T√©l√©phone principal modifiable pour accessibilit√© continue.
    /// Adaptation moyens communication directs selon mobilit√©.
    /// </summary>
    [StringLength(50, ErrorMessage = "Le t√©l√©phone ne peut pas d√©passer 50 caract√®res")]
    public string? Telephone { get; set; }

    /// <summary>
    /// R√¥le sp√©cialis√© modifiable selon √©volution expertise.
    /// Adaptation responsabilit√©s et domaines intervention.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le r√¥le ne peut pas d√©passer 100 caract√®res")]
    public string? Role { get; set; }

    /// <summary>
    /// Affiliation cabinet modifiable pour mobilit√© professionnelle.
    /// Changement employeur ou √©volution statut mandataire.
    /// </summary>
    public int? IdCabinet { get; set; }

    /// <summary>
    /// Affiliation client modifiable pour restructurations organisationnelles.
    /// √âvolution rattachement interne selon r√©organisations.
    /// </summary>
    public int? IdClient { get; set; }

    /// <summary>
    /// Collection emails modifiable pour communication optimis√©e.
    /// Mise √† jour canaux multiples selon besoins √©volutifs.
    /// </summary>
    public List<string>? Emails { get; set; }
    
    /// <summary>
    /// Collection t√©l√©phones modifiable pour accessibilit√© renforc√©e.
    /// √âvolution moyens communication selon contexte professionnel.
    /// </summary>
    public List<string>? Phones { get; set; }
    
    /// <summary>
    /// Collection r√¥les modifiable pour expertise √©volutive.
    /// Adaptation sp√©cialisations selon d√©veloppement comp√©tences.
    /// </summary>
    public List<string>? Roles { get; set; }
}

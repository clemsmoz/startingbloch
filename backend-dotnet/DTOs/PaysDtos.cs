/*
 * ================================================================================================
 * DTOs PAYS - JURIDICTIONS G√âOGRAPHIQUES PROPRI√âT√â INTELLECTUELLE
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * G√®re transfert donn√©es pays juridictions pour d√©p√¥ts brevets internationaux.
 * Support navigation g√©ographique et conformit√© standards internationaux.
 * 
 * STANDARDS G√âOGRAPHIQUES :
 * ========================
 * üåç ISO 3166 ‚Üí Codes pays standards internationaux
 * üá´üá∑ MULTILINGUE ‚Üí Noms fran√ßais et localisations
 * üèõÔ∏è JURIDICTIONS ‚Üí Comp√©tences l√©gales brevets
 * üìä STATISTIQUES ‚Üí M√©triques activit√© par r√©gion
 * 
 * COMPLIANCE INTERNATIONALE :
 * ==========================
 * ‚úÖ Codes ISO-2 et ISO-3 standards
 * ‚úÖ Noms officiels multilingues  
 * ‚úÖ Juridictions brevets reconnues
 * ‚úÖ Audit trail r√©f√©rentiels
 * 
 * ================================================================================================
 */

using System.ComponentModel.DataAnnotations;

namespace StartingBloch.Backend.DTOs;

/// <summary>
/// DTO pays complet avec codes standards internationaux et localisations.
/// Juridiction g√©ographique pour d√©p√¥ts brevets avec identifiants normalis√©s.
/// Support navigation internationale et conformit√© r√©glementaire.
/// </summary>
public class PaysDto
{
    /// <summary>Identifiant unique pays syst√®me StartingBloch.</summary>
    public int Id { get; set; }
    
    /// <summary>Nom pays principal pour affichage standard.</summary>
    public string NomPays { get; set; } = string.Empty;
    
    /// <summary>Code pays interne syst√®me pour r√©f√©rencement.</summary>
    public string CodePays { get; set; } = string.Empty;
    
    /// <summary>Nom officiel fran√ßais pour interface francophone.</summary>
    public string? NomFrFr { get; set; }
    
    /// <summary>Code ISO 3166-1 alpha-2 standard international.</summary>
    public string? CodeIso { get; set; }
    
    /// <summary>Code ISO 3166-1 alpha-3 pour syst√®mes √©tendus.</summary>
    public string? CodeIso3 { get; set; }
    
    /// <summary>Date cr√©ation UTC pays pour audit trail r√©f√©rentiel.</summary>
    public DateTime CreatedAt { get; set; }
}

/// <summary>
/// DTO cr√©ation nouveau pays avec validations standards g√©ographiques.
/// Enregistrement juridiction avec codes internationaux conformes.
/// </summary>
public class CreatePaysDto
{
    /// <summary>Nom fran√ßais OBLIGATOIRE pour interface utilisateur.</summary>
    [Required(ErrorMessage = "Le nom du pays est requis")]
    [StringLength(100, ErrorMessage = "Le nom du pays ne peut pas d√©passer 100 caract√®res")]
    public string NomFrFr { get; set; } = string.Empty;

    /// <summary>Code ISO optionnel avec validation longueur standard.</summary>
    [StringLength(10, ErrorMessage = "Le code ISO ne peut pas d√©passer 10 caract√®res")]
    public string? CodeIso { get; set; }
}

/// <summary>
/// DTO modification pays existant avec contraintes g√©ographiques maintenues.
/// </summary>
public class UpdatePaysDto
{
    /// <summary>Nom fran√ßais OBLIGATOIRE maintenu pour coh√©rence interface.</summary>
    [Required(ErrorMessage = "Le nom du pays est requis")]
    [StringLength(100, ErrorMessage = "Le nom du pays ne peut pas d√©passer 100 caract√®res")]
    public string NomFrFr { get; set; } = string.Empty;

    /// <summary>Code ISO modifiable selon √©volutions standards.</summary>
    [StringLength(10, ErrorMessage = "Le code ISO ne peut pas d√©passer 10 caract√®res")]
    public string? CodeIso { get; set; }
}

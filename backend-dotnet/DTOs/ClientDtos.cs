/*
 * ================================================================================================
 * DTOs CLIENTS - GESTION PORTEFEUILLES PROPRI√âT√â INTELLECTUELLE
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * G√®re transfert donn√©es clients propri√©taires brevets et comptes utilisateurs associ√©s.
 * Centrale gestion permissions, authentification et relations multi-entit√©s complexes.
 * 
 * MOD√àLES CLIENTS :
 * ================
 * 
 * üìã CLIENT SIMPLE ‚Üí ClientDto informations de base + permissions
 * ‚ûï CR√âATION ‚Üí CreateClientDto avec validations m√©tier
 * ‚úèÔ∏è MODIFICATION ‚Üí UpdateClientDto champs optionnels flexibles  
 * üë§ AVEC COMPTE ‚Üí ClientWithUserStatusDto + m√©triques activit√©
 * üîê CR√âATION COMPTE ‚Üí CreateUserForClientDto client existant
 * üì¶ PACK COMPLET ‚Üí CreateClientWithUserDto client + utilisateur simultan√©
 * 
 * PERMISSIONS S√âCURIT√â :
 * =====================
 * ‚úÖ CanWrite : Autorisation modification donn√©es brevets
 * ‚úÖ CanRead : Autorisation consultation portefeuille  
 * ‚úÖ IsBlocked : Suspension temporaire acc√®s syst√®me
 * ‚úÖ IsActive : Statut activation compte utilisateur
 * 
 * AUDIT & COMPLIANCE :
 * ===================
 * ‚úÖ Timestamps cr√©ation/modification automatiques
 * ‚úÖ Validation email stricte communications
 * ‚úÖ Contraintes longueur conformit√© internationale
 * ‚úÖ Notes administratives tra√ßabilit√© RGPD
 * 
 * ================================================================================================
 */

using System.ComponentModel.DataAnnotations;

namespace StartingBloch.Backend.DTOs;

/// <summary>
/// DTO client de base avec informations essentielles et permissions syst√®me.
/// Mod√®le standard consultation et gestion portefeuilles propri√©t√© intellectuelle.
/// Inclut audit trail et contr√¥les acc√®s granulaires par client.
/// </summary>
public class ClientDto
{
    /// <summary>
    /// Identifiant unique client dans syst√®me StartingBloch.
    /// Cl√© primaire pour toutes relations et permissions utilisateur.
    /// </summary>
    public int Id { get; set; }
    
    /// <summary>
    /// D√©nomination sociale ou nom client pour identification.
    /// Champ obligatoire r√©f√©rence principale dans interfaces.
    /// </summary>
    public string NomClient { get; set; } = string.Empty;
    
    /// <summary>
    /// R√©f√©rence interne client pour classification m√©tier (optionnel).
    /// Code personnalis√© organisation ou syst√®me r√©f√©rencement externe.
    /// </summary>
    public string? ReferenceClient { get; set; }
    
    /// <summary>
    /// Adresse postale compl√®te client pour correspondances (optionnel).
    /// Informations g√©ographiques et contact physique si n√©cessaire.
    /// </summary>
    public string? AdresseClient { get; set; }
    
    /// <summary>
    /// Code postal client pour pr√©cision g√©olocalisation (optionnel).
    /// Compl√©ment adresse selon standards postaux internationaux.
    /// </summary>
    public string? CodePostal { get; set; }
    
    /// <summary>
    /// Pays client pour juridiction et r√©glementation applicable (optionnel).
    /// Contexte l√©gal important gestion propri√©t√© intellectuelle.
    /// </summary>
    public string? PaysClient { get; set; }
    
    /// <summary>
    /// Email contact principal client pour communications (optionnel).
    /// Canal privil√©gi√© √©changes √©lectroniques s√©curis√©s.
    /// </summary>
    public string? EmailClient { get; set; }
    
    /// <summary>
    /// T√©l√©phone contact client pour communications urgentes (optionnel).
    /// Moyen communication direct selon besoins m√©tier.
    /// </summary>
    public string? TelephoneClient { get; set; }
    
    /// <summary>
    /// Permission modification donn√©es brevets par ce client.
    /// Contr√¥le acc√®s critique s√©curit√© propri√©t√© intellectuelle.
    /// </summary>
    public bool CanWrite { get; set; }
    
    /// <summary>
    /// Permission consultation portefeuille brevets par ce client.
    /// Acc√®s lecture donn√©es propri√©t√© intellectuelle poss√©d√©es.
    /// </summary>
    public bool CanRead { get; set; }
    
    /// <summary>
    /// Statut blocage temporaire acc√®s client au syst√®me.
    /// Suspension s√©curitaire sans suppression d√©finitive donn√©es.
    /// </summary>
    public bool IsBlocked { get; set; }
    
    /// <summary>
    /// Date cr√©ation UTC client pour audit trail RGPD.
    /// Timestamp immutable premi√®re inscription syst√®me.
    /// </summary>
    public DateTime CreatedAt { get; set; }
    
    /// <summary>
    /// Date derni√®re modification UTC donn√©es client pour tra√ßabilit√©.
    /// Timestamp automatique toute mise √† jour informations.
    /// </summary>
    public DateTime UpdatedAt { get; set; }
}

/// <summary>
/// DTO cr√©ation nouveau client avec validations strictes champs obligatoires.
/// Assure int√©grit√© donn√©es d√®s inscription et permissions s√©curis√©es par d√©faut.
/// Configuration initiale conservative avec possibilit√© √©volution ult√©rieure.
/// </summary>
public class CreateClientDto
{
    /// <summary>
    /// Nom client OBLIGATOIRE - identification principale syst√®me.
    /// </summary>
    [StringLength(255, ErrorMessage = "Le nom du client ne peut pas d√©passer 255 caract√®res")]
    public string NomClient { get; set; } = string.Empty;

    /// <summary>
    /// R√©f√©rence interne optionnelle pour organisation m√©tier.
    /// </summary>
    [StringLength(255, ErrorMessage = "La r√©f√©rence ne peut pas d√©passer 255 caract√®res")]
    public string? ReferenceClient { get; set; }

    /// <summary>
    /// Adresse postale optionnelle client pour correspondances.
    /// </summary>
    [StringLength(500, ErrorMessage = "L'adresse ne peut pas d√©passer 500 caract√®res")]
    public string? AdresseClient { get; set; }

    /// <summary>
    /// Code postal optionnel selon standards internationaux.
    /// </summary>
    [StringLength(20, ErrorMessage = "Le code postal ne peut pas d√©passer 20 caract√®res")]
    public string? CodePostal { get; set; }

    /// <summary>
    /// Pays client optionnel pour contexte juridique.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le pays ne peut pas d√©passer 100 caract√®res")]
    public string? PaysClient { get; set; }

    /// <summary>
    /// Email contact optionnel avec validation format strict.
    /// </summary>
    [EmailAddress(ErrorMessage = "L'email n'est pas valide")]
    [StringLength(255, ErrorMessage = "L'email ne peut pas d√©passer 255 caract√®res")]
    public string? EmailClient { get; set; }

    /// <summary>
    /// T√©l√©phone contact optionnel format international.
    /// </summary>
    [StringLength(50, ErrorMessage = "Le t√©l√©phone ne peut pas d√©passer 50 caract√®res")]
    public string? TelephoneClient { get; set; }

    /// <summary>
    /// Permission √©criture par d√©faut false - s√©curit√© maximale.
    /// </summary>
    public bool CanWrite { get; set; } = false;
    
    /// <summary>
    /// Permission lecture par d√©faut true - acc√®s consultation standard.
    /// </summary>
    public bool CanRead { get; set; } = true;
    
    /// <summary>
    /// Statut blocage par d√©faut false - client actif cr√©ation.
    /// </summary>
    public bool IsBlocked { get; set; } = false;
}

/// <summary>
/// DTO modification client existant avec champs optionnels pour flexibilit√©.
/// Permet mise √† jour partielle sans impact donn√©es non modifi√©es.
/// Validation maintenue sur champs modifi√©s pour int√©grit√© continue.
/// </summary>
public class UpdateClientDto
{
    /// <summary>Nom client modifiable avec validation longueur.</summary>
    [StringLength(255, ErrorMessage = "Le nom du client ne peut pas d√©passer 255 caract√®res")]
    public string? NomClient { get; set; }

    /// <summary>R√©f√©rence client modifiable pour √©volution organisation.</summary>
    [StringLength(255, ErrorMessage = "La r√©f√©rence ne peut pas d√©passer 255 caract√®res")]
    public string? ReferenceClient { get; set; }

    /// <summary>Adresse client modifiable selon changements g√©ographiques.</summary>
    [StringLength(500, ErrorMessage = "L'adresse ne peut pas d√©passer 500 caract√®res")]
    public string? AdresseClient { get; set; }

    /// <summary>Code postal modifiable √©volutions organisationnelles.</summary>
    [StringLength(20, ErrorMessage = "Le code postal ne peut pas d√©passer 20 caract√®res")]
    public string? CodePostal { get; set; }

    /// <summary>Pays client modifiable changements juridiction.</summary>
    [StringLength(100, ErrorMessage = "Le pays ne peut pas d√©passer 100 caract√®res")]
    public string? PaysClient { get; set; }

    /// <summary>Email contact modifiable avec validation format maintenue.</summary>
    [EmailAddress(ErrorMessage = "L'email n'est pas valide")]
    [StringLength(255, ErrorMessage = "L'email ne peut pas d√©passer 255 caract√®res")]
    public string? EmailClient { get; set; }

    /// <summary>T√©l√©phone modifiable √©volution moyens communication.</summary>
    [StringLength(50, ErrorMessage = "Le t√©l√©phone ne peut pas d√©passer 50 caract√®res")]
    public string? TelephoneClient { get; set; }

    /// <summary>Permission √©criture modifiable gestion droits √©volutive.</summary>
    public bool? CanWrite { get; set; }
    
    /// <summary>Permission lecture modifiable contr√¥le acc√®s granulaire.</summary>
    public bool? CanRead { get; set; }
    
    /// <summary>Statut blocage modifiable gestion incidents s√©curit√©.</summary>
    public bool? IsBlocked { get; set; }
}

/// <summary>
/// DTO client enrichi avec statut compte utilisateur et m√©triques activit√©.
/// Extend ClientDto avec informations compte associ√© et statistiques portefeuille.
/// Vision compl√®te relation client-utilisateur et engagement plateforme.
/// </summary>
public class ClientWithUserStatusDto : ClientDto
{
    /// <summary>Indicateur existence compte utilisateur associ√© client.</summary>
    public bool HasUserAccount { get; set; }
    
    /// <summary>D√©tails compte utilisateur associ√© si existant (optionnel).</summary>
    public UserDto? UserAccount { get; set; }
    
    /// <summary>Nombre brevets dans portefeuille client pour m√©triques.</summary>
    public int BrevetCount { get; set; }
    
    /// <summary>Date derni√®re connexion utilisateur pour audit activit√©.</summary>
    public DateTime? LastUserLogin { get; set; }
}

/// <summary>
/// DTO cr√©ation compte utilisateur pour client existant dans syst√®me.
/// Associe authentification √† client d√©j√† enregistr√© avec validations strictes.
/// S√©curit√© renforc√©e mot de passe et permissions configurables.
/// </summary>
public class CreateUserForClientDto
{
    /// <summary>ID client existant OBLIGATOIRE pour association compte.</summary>
    public int ClientId { get; set; }

    /// <summary>Nom utilisateur OBLIGATOIRE unique dans syst√®me authentification.</summary>
    [StringLength(100, ErrorMessage = "Le nom d'utilisateur ne peut pas d√©passer 100 caract√®res")]
    public string Username { get; set; } = string.Empty;

    /// <summary>Email utilisateur OBLIGATOIRE distinct email client possible.</summary>
    [EmailAddress(ErrorMessage = "L'email n'est pas valide")]
    [StringLength(100, ErrorMessage = "L'email ne peut pas d√©passer 100 caract√®res")]
    public string Email { get; set; } = string.Empty;

    /// <summary>Mot de passe OBLIGATOIRE minimum 6 caract√®res s√©curit√©.</summary>
    [StringLength(100, MinimumLength = 6, ErrorMessage = "Le mot de passe doit contenir entre 6 et 100 caract√®res")]
    public string Password { get; set; } = string.Empty;

    /// <summary>Permission √©criture par d√©faut false - principe moindre privil√®ge.</summary>
    public bool CanWrite { get; set; } = false;
    
    /// <summary>Statut activation par d√©faut true - compte imm√©diatement utilisable.</summary>
    public bool IsActive { get; set; } = true;

    /// <summary>Notes administratives optionnelles pour contexte cr√©ation compte.</summary>
    [StringLength(500, ErrorMessage = "Les notes ne peuvent pas d√©passer 500 caract√®res")]
    public string? Notes { get; set; }
}

/// <summary>
/// DTO cr√©ation simultan√©e client et compte utilisateur pour int√©gration compl√®te.
/// Workflow optimis√© inscription nouvelle entit√© avec authentification imm√©diate.
/// Validation crois√©e informations client et utilisateur pour coh√©rence globale.
/// </summary>
public class CreateClientWithUserDto
{
    // === INFORMATIONS CLIENT ===
    
    /// <summary>Nom client OBLIGATOIRE - d√©nomination entit√© propri√©taire brevets.</summary>
    [StringLength(255, ErrorMessage = "Le nom du client ne peut pas d√©passer 255 caract√®res")]
    public string NomClient { get; set; } = string.Empty;

    /// <summary>R√©f√©rence client optionnelle pour classification interne.</summary>
    [StringLength(255, ErrorMessage = "La r√©f√©rence ne peut pas d√©passer 255 caract√®res")]
    public string? ReferenceClient { get; set; }

    /// <summary>Adresse client optionnelle pour correspondances physiques.</summary>
    [StringLength(500, ErrorMessage = "L'adresse ne peut pas d√©passer 500 caract√®res")]
    public string? AdresseClient { get; set; }

    /// <summary>Code postal client optionnel selon standards g√©ographiques.</summary>
    [StringLength(20, ErrorMessage = "Le code postal ne peut pas d√©passer 20 caract√®res")]
    public string? CodePostal { get; set; }

    /// <summary>Pays client optionnel pour contexte juridique propri√©t√© intellectuelle.</summary>
    [StringLength(100, ErrorMessage = "Le pays ne peut pas d√©passer 100 caract√®res")]
    public string? PaysClient { get; set; }

    /// <summary>Email contact client optionnel distinct email authentification utilisateur.</summary>
    [EmailAddress(ErrorMessage = "L'email client n'est pas valide")]
    [StringLength(255, ErrorMessage = "L'email client ne peut pas d√©passer 255 caract√®res")]
    public string? EmailClient { get; set; }

    /// <summary>T√©l√©phone client optionnel pour communications directes urgentes.</summary>
    [StringLength(50, ErrorMessage = "Le t√©l√©phone ne peut pas d√©passer 50 caract√®res")]
    public string? TelephoneClient { get; set; }

    // === INFORMATIONS COMPTE UTILISATEUR ===
    
    /// <summary>Nom utilisateur OBLIGATOIRE unique authentification syst√®me.</summary>
    [StringLength(100, ErrorMessage = "Le nom d'utilisateur ne peut pas d√©passer 100 caract√®res")]
    public string Username { get; set; } = string.Empty;

    /// <summary>Email utilisateur OBLIGATOIRE connexion et r√©cup√©ration mot de passe.</summary>
    [EmailAddress(ErrorMessage = "L'email utilisateur n'est pas valide")]
    [StringLength(100, ErrorMessage = "L'email utilisateur ne peut pas d√©passer 100 caract√®res")]
    public string UserEmail { get; set; } = string.Empty;

    /// <summary>Mot de passe OBLIGATOIRE s√©curit√© minimale 6 caract√®res.</summary>
    [StringLength(100, MinimumLength = 6, ErrorMessage = "Le mot de passe doit contenir entre 6 et 100 caract√®res")]
    public string Password { get; set; } = string.Empty;

    // === PERMISSIONS UTILISATEUR ===
    
    /// <summary>Permission √©criture par d√©faut false - acc√®s lecture seule initial.</summary>
    public bool CanWrite { get; set; } = false;
    
    /// <summary>Permission lecture par d√©faut true - consultation portefeuille standard.</summary>
    public bool CanRead { get; set; } = true;
    
    /// <summary>Statut activation par d√©faut true - compte imm√©diatement op√©rationnel.</summary>
    public bool IsActive { get; set; } = true;

    /// <summary>Notes administratives optionnelles pour contexte cr√©ation int√©gr√©e.</summary>
    [StringLength(500, ErrorMessage = "Les notes ne peuvent pas d√©passer 500 caract√®res")]
    public string? Notes { get; set; }
}

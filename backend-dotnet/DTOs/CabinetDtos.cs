/*
 * ================================================================================================
 * DTOs CABINETS - MANDATAIRES PROPRI√âT√â INTELLECTUELLE
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * G√®re transfert donn√©es cabinets mandataires sp√©cialis√©s propri√©t√© intellectuelle.
 * Facilite collaboration client-cabinet et suivi mandats internationaux complexes.
 * 
 * MOD√àLES GESTION :
 * ================
 * 
 * üìã CABINET COMPLET ‚Üí CabinetDto avec clients rattach√©s et m√©triques
 * ‚ûï CR√âATION ‚Üí CreateCabinetDto avec validations strictes conformit√©
 * ‚úèÔ∏è MODIFICATION ‚Üí UpdateCabinetDto avec champs requis maintenus
 * 
 * VALIDATIONS PROFESSIONNELLES :
 * =============================
 * ‚úÖ Nom cabinet obligatoire (identification l√©gale)
 * ‚úÖ Adresse compl√®te requise (correspondance officielle)
 * ‚úÖ Pays obligatoire (juridiction comp√©tence)
 * ‚úÖ Email valid√© format (communication s√©curis√©e)
 * ‚úÖ T√©l√©phone international (contact urgence)
 * 
 * M√âTRIQUES BUSINESS :
 * ===================
 * ‚úÖ Nombre clients rattach√©s (charge cabinet)
 * ‚úÖ Audit trail cr√©ation/modification
 * ‚úÖ Relations Many-to-Many s√©curis√©es
 * 
 * ================================================================================================
 */

using System.ComponentModel.DataAnnotations;
using StartingBloch.Backend.Models;

namespace StartingBloch.Backend.DTOs;

/// <summary>
/// DTO complet cabinet mandataire avec clients rattach√©s et m√©triques activit√©.
/// Mod√®le central gestion partenaires professionnels propri√©t√© intellectuelle.
/// Inclut informations contact compl√®tes et statistiques collaboration.
/// </summary>
public class CabinetDto
{
    /// <summary>
    /// Identifiant unique cabinet dans syst√®me StartingBloch.
    /// Cl√© primaire pour toutes op√©rations et relations mandats.
    /// </summary>
    public int Id { get; set; }
    
    /// <summary>
    /// D√©nomination sociale officielle du cabinet mandataire.
    /// Nom l√©gal utilis√© correspondances et contrats clients.
    /// </summary>
    public string NomCabinet { get; set; } = string.Empty;
    
    /// <summary>
    /// Adresse postale compl√®te si√®ge social ou bureau principal.
    /// Adresse r√©f√©rence pour correspondances officielles et juridiques.
    /// </summary>
    public string AdresseCabinet { get; set; } = string.Empty;
    
    /// <summary>
    /// Code postal pour pr√©cision g√©olocalisation et tri courrier.
    /// Optionnel selon standards postaux internationaux variables.
    /// </summary>
    public string? CodePostal { get; set; }
    
    /// <summary>
    /// Pays implantation cabinet pour juridiction comp√©tence.
    /// D√©termine r√©glementation applicable et zones intervention.
    /// </summary>
    public string PaysCabinet { get; set; } = string.Empty;
    
    /// <summary>
    /// Adresse email principale contact cabinet (optionnel).
    /// Canal privil√©gi√© communication rapide et √©changes documents.
    /// </summary>
    public string? EmailCabinet { get; set; }
    
    /// <summary>
    /// Num√©ro t√©l√©phone principal cabinet (optionnel).
    /// Contact direct urgences et communications verbales importantes.
    /// </summary>
    public string? TelephoneCabinet { get; set; }
    
    /// <summary>
    /// Type de sp√©cialisation du cabinet : Annuit√© ou Proc√©dure.
    /// D√©termine le domaine d'expertise principal du cabinet.
    /// </summary>
    public CabinetType Type { get; set; }
    
    /// <summary>
    /// Date cr√©ation UTC cabinet dans syst√®me pour audit trail.
    /// Timestamp premi√®re int√©gration partenaire professionnel.
    /// </summary>
    public DateTime CreatedAt { get; set; }
    
    /// <summary>
    /// Date derni√®re modification UTC donn√©es cabinet pour tra√ßabilit√©.
    /// Timestamp mise √† jour automatique modifications informations.
    /// </summary>
    public DateTime UpdatedAt { get; set; }
    
    /// <summary>
    /// Nombre clients actuellement rattach√©s √† ce cabinet.
    /// M√©trique charge travail et indicateur activit√© partenaire.
    /// </summary>
    public int NombreClients { get; set; }
    
    /// <summary>
    /// Liste clients collaborant avec ce cabinet (optionnel chargement).
    /// Relations Many-to-Many pour mandats multiples et flexibles.
    /// </summary>
    public List<ClientDto>? Clients { get; set; }
}

/// <summary>
/// DTO cr√©ation nouveau cabinet avec validations strictes conformit√© professionnelle.
/// Assure int√©grit√© donn√©es mandataire et respect standards communication.
/// Tous champs critiques valid√©s pour fiabilit√© partenariat.
/// </summary>
public class CreateCabinetDto
{
    /// <summary>
    /// Nom cabinet OBLIGATOIRE - d√©nomination l√©gale mandataire.
    /// Validation stricte longueur pour compatibilit√© bases donn√©es.
    /// </summary>
    [Required(ErrorMessage = "Le nom du cabinet est requis")]
    [StringLength(255, ErrorMessage = "Le nom du cabinet ne peut pas d√©passer 255 caract√®res")]
    public string NomCabinet { get; set; } = string.Empty;

    /// <summary>
    /// Adresse cabinet OBLIGATOIRE - si√®ge social correspondances.
    /// Validation longueur pour adresses internationales complexes.
    /// </summary>
    [Required(ErrorMessage = "L'adresse est requise")]
    [StringLength(500, ErrorMessage = "L'adresse ne peut pas d√©passer 500 caract√®res")]
    public string AdresseCabinet { get; set; } = string.Empty;

    /// <summary>
    /// Code postal optionnel selon standards nationaux variables.
    /// Validation longueur adapt√©e formats internationaux divers.
    /// </summary>
    [StringLength(20, ErrorMessage = "Le code postal ne peut pas d√©passer 20 caract√®res")]
    public string? CodePostal { get; set; }

    /// <summary>
    /// Pays cabinet OBLIGATOIRE - juridiction et r√©glementation.
    /// D√©termine comp√©tences l√©gales et zones intervention autoris√©es.
    /// </summary>
    [Required(ErrorMessage = "Le pays est requis")]
    [StringLength(100, ErrorMessage = "Le pays ne peut pas d√©passer 100 caract√®res")]
    public string PaysCabinet { get; set; } = string.Empty;

    /// <summary>
    /// Email cabinet optionnel avec validation format stricte.
    /// Canal communication privil√©gi√© √©changes documents s√©curis√©s.
    /// </summary>
    [EmailAddress(ErrorMessage = "Format d'email invalide")]
    [StringLength(255, ErrorMessage = "L'email ne peut pas d√©passer 255 caract√®res")]
    public string? EmailCabinet { get; set; }

    /// <summary>
    /// T√©l√©phone cabinet optionnel pour communications urgentes.
    /// Format international flexible selon standards nationaux.
    /// </summary>
    [StringLength(50, ErrorMessage = "Le t√©l√©phone ne peut pas d√©passer 50 caract√®res")]
    public string? TelephoneCabinet { get; set; }

    /// <summary>
    /// Type de sp√©cialisation du cabinet : Annuit√© ou Proc√©dure.
    /// D√©termine le domaine d'expertise principal du cabinet.
    /// </summary>
    [Required(ErrorMessage = "Le type de cabinet est requis")]
    public CabinetType Type { get; set; }
}

/// <summary>
/// DTO modification cabinet existant avec validations maintenues int√©grit√©.
/// Pr√©serve contraintes obligatoires pour fiabilit√© donn√©es partenaire.
/// Permet mise √† jour compl√®te informations contact et identification.
/// </summary>
public class UpdateCabinetDto
{
    /// <summary>
    /// Nom cabinet OBLIGATOIRE maintenu en modification.
    /// D√©nomination l√©gale ne peut √™tre vide pour coh√©rence partenariat.
    /// </summary>
    [Required(ErrorMessage = "Le nom du cabinet est requis")]
    [StringLength(255, ErrorMessage = "Le nom du cabinet ne peut pas d√©passer 255 caract√®res")]
    public string NomCabinet { get; set; } = string.Empty;

    /// <summary>
    /// Adresse cabinet OBLIGATOIRE maintenue en modification.
    /// Si√®ge social requis pour correspondances officielles continues.
    /// </summary>
    [Required(ErrorMessage = "L'adresse est requise")]
    [StringLength(500, ErrorMessage = "L'adresse ne peut pas d√©passer 500 caract√®res")]
    public string AdresseCabinet { get; set; } = string.Empty;

    /// <summary>
    /// Code postal modifiable selon √©volutions organisationnelles.
    /// Mise √† jour flexible d√©m√©nagements ou restructurations.
    /// </summary>
    [StringLength(20, ErrorMessage = "Le code postal ne peut pas d√©passer 20 caract√®res")]
    public string? CodePostal { get; set; }

    /// <summary>
    /// Pays cabinet OBLIGATOIRE maintenu en modification.
    /// Juridiction comp√©tence ne peut √™tre ind√©termin√©e.
    /// </summary>
    [Required(ErrorMessage = "Le pays est requis")]
    [StringLength(100, ErrorMessage = "Le pays ne peut pas d√©passer 100 caract√®res")]
    public string PaysCabinet { get; set; } = string.Empty;

    /// <summary>
    /// Email cabinet modifiable avec validation format maintenue.
    /// Mise √† jour canaux communication selon √©volutions organisation.
    /// </summary>
    [EmailAddress(ErrorMessage = "Format d'email invalide")]
    [StringLength(255, ErrorMessage = "L'email ne peut pas d√©passer 255 caract√®res")]
    public string? EmailCabinet { get; set; }

    /// <summary>
    /// T√©l√©phone cabinet modifiable pour actualisation contacts.
    /// Flexibilit√© mise √† jour moyens communication directs.
    /// </summary>
    [StringLength(50, ErrorMessage = "Le t√©l√©phone ne peut pas d√©passer 50 caract√®res")]
    public string? TelephoneCabinet { get; set; }

    /// <summary>
    /// Type de sp√©cialisation du cabinet : Annuit√© ou Proc√©dure.
    /// Peut √™tre modifi√© selon √©volution des comp√©tences du cabinet.
    /// </summary>
    [Required(ErrorMessage = "Le type de cabinet est requis")]
    public CabinetType Type { get; set; }
}

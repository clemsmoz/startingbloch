/*
 * ================================================================================================
 * DTOs RELATIONS CLIENT-CABINET - MANDATS PROFESSIONNELS
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * G√®re relations mandats entre clients StartingBloch et cabinets mandataires.
 * Facilite collaboration multi-cabinet et sp√©cialisations g√©ographiques/techniques.
 * 
 * MOD√àLES MANDATS :
 * ================
 * 
 * üìã RELATION COMPL√àTE ‚Üí ClientCabinetDto avec entit√©s charg√©es
 * ‚ûï CR√âATION MANDAT ‚Üí CreateClientCabinetDto avec validations
 * ‚úèÔ∏è MODIFICATION ‚Üí UpdateClientCabinetDto pour √©volutions collaboration
 * 
 * GESTION LIFECYCLE :
 * ==================
 * ‚úÖ Statut actif/inactif mandats (IsActive)
 * ‚úÖ Type collaboration sp√©cialis√©e (g√©o/technique)
 * ‚úÖ Audit trail cr√©ation mandats
 * ‚úÖ Relations bidirectionnelles s√©curis√©es
 * 
 * BUSINESS RULES :
 * ===============
 * ‚úÖ Un client peut avoir multiples cabinets
 * ‚úÖ Un cabinet peut servir multiples clients  
 * ‚úÖ Types mandats configurables (conseil, d√©p√¥t, contentieux)
 * ‚úÖ Activation/d√©sactivation sans suppression historique
 * 
 * ================================================================================================
 */

using System.ComponentModel.DataAnnotations;

namespace StartingBloch.Backend.DTOs;

/// <summary>
/// DTO complet relation mandat client-cabinet avec entit√©s associ√©es.
/// Mod√®le central gestion partenariats professionnels et collaborations sp√©cialis√©es.
/// Inclut informations lifecycle et contexte m√©tier du mandat.
/// </summary>
public class ClientCabinetDto
{
    /// <summary>
    /// Identifiant unique relation mandat dans syst√®me.
    /// Cl√© primaire pour gestion lifecycle collaboration.
    /// </summary>
    public int Id { get; set; }
    
    /// <summary>
    /// Identifiant client b√©n√©ficiaire du mandat.
    /// R√©f√©rence propri√©taire brevets et d√©cisions strat√©giques.
    /// </summary>
    public int ClientId { get; set; }
    
    /// <summary>
    /// Identifiant cabinet mandataire professionnel.
    /// R√©f√©rence prestataire services propri√©t√© intellectuelle.
    /// </summary>
    public int CabinetId { get; set; }
    
    /// <summary>
    /// Type sp√©cialisation mandat (optionnel).
    /// Exemples : "conseil", "d√©p√¥t", "contentieux", "international".
    /// </summary>
    public string? Type { get; set; }
    
    /// <summary>
    /// Statut activation mandat pour gestion lifecycle.
    /// False = suspension temporaire sans suppression historique.
    /// </summary>
    public bool IsActive { get; set; }
    
    /// <summary>
    /// Date cr√©ation UTC mandat pour audit trail.
    /// Timestamp d√©but collaboration professionnelle.
    /// </summary>
    public DateTime CreatedAt { get; set; }
    
    /// <summary>
    /// Entit√© client compl√®te (chargement optionnel).
    /// Acc√®s informations compl√®tes b√©n√©ficiaire mandat.
    /// </summary>
    public ClientDto? Client { get; set; }
    
    /// <summary>
    /// Entit√© cabinet compl√®te (chargement optionnel).
    /// Acc√®s informations compl√®tes mandataire professionnel.
    /// </summary>
    public CabinetDto? Cabinet { get; set; }
}

/// <summary>
/// DTO cr√©ation nouveau mandat client-cabinet avec validations strictes.
/// Assure int√©grit√© relation et coh√©rence partenariat professionnel.
/// Activation automatique nouveau mandat sauf indication contraire.
/// </summary>
public class CreateClientCabinetDto
{
    /// <summary>
    /// Identifiant client OBLIGATOIRE pour mandat.
    /// Validation existence c√¥t√© contr√¥leur avant persistance.
    /// </summary>
    [Required(ErrorMessage = "L'ID du client est obligatoire")]
    public int ClientId { get; set; }

    /// <summary>
    /// Identifiant cabinet OBLIGATOIRE pour mandat.
    /// Validation existence c√¥t√© contr√¥leur avant persistance.
    /// </summary>
    [Required(ErrorMessage = "L'ID du cabinet est obligatoire")]
    public int CabinetId { get; set; }

    /// <summary>
    /// Type sp√©cialisation mandat optionnel mais recommand√©.
    /// Clarification nature collaboration et expertise mobilis√©e.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le type ne peut pas d√©passer 100 caract√®res")]
    public string? Type { get; set; }

    /// <summary>
    /// Statut activation par d√©faut true pour nouveau mandat.
    /// Collaboration imm√©diatement op√©rationnelle sauf cas particulier.
    /// </summary>
    public bool IsActive { get; set; } = true;
}

/// <summary>
/// DTO modification mandat existant pour √©volution collaboration.
/// Permet ajustement type sp√©cialisation et gestion statut activation.
/// Champs optionnels pour modification partielle sans impact global.
/// </summary>
public class UpdateClientCabinetDto
{
    /// <summary>
    /// Type sp√©cialisation mandat modifiable selon √©volution besoins.
    /// Adaptation expertise cabinet aux nouveaux d√©fis client.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le type ne peut pas d√©passer 100 caract√®res")]
    public string? Type { get; set; }

    /// <summary>
    /// Statut activation modifiable pour gestion lifecycle mandat.
    /// Null = conservation √©tat actuel, false = suspension, true = r√©activation.
    /// </summary>
    public bool? IsActive { get; set; }
}

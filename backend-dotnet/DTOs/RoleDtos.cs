/*
 * ================================================================================================
 * DTOs R√îLES - SYST√àME PERMISSIONS GRANULAIRES
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * G√®re transfert donn√©es r√¥les syst√®me authentification StartingBloch.
 * Support architecture permissions granulaires et contr√¥le acc√®s multi-niveaux.
 * 
 * R√îLES STANDARD :
 * ===============
 * üîë ADMIN ‚Üí Employ√© StartingBloch acc√®s complet + gestion utilisateurs
 * üë§ USER ‚Üí Employ√© StartingBloch droits configurables par client  
 * üéØ CLIENT ‚Üí Client externe acc√®s restreint ses propres brevets
 * 
 * ARCHITECTURE S√âCURIT√â :
 * ======================
 * ‚úÖ R√¥les pr√©d√©finis syst√®me (admin/user/client)
 * ‚úÖ Descriptions m√©tier explicites
 * ‚úÖ Extensibilit√© r√¥les futurs
 * ‚úÖ Audit trail cr√©ation r√¥les
 * 
 * ================================================================================================
 */

using System.ComponentModel.DataAnnotations;

namespace StartingBloch.Backend.DTOs;

/// <summary>
/// DTO r√¥le syst√®me avec description m√©tier pour permissions granulaires.
/// √âl√©ment central architecture autorisation et contr√¥le acc√®s plateforme.
/// D√©finit capacit√©s et restrictions par type utilisateur.
/// </summary>
public class RoleDto
{
    /// <summary>Identifiant unique r√¥le syst√®me StartingBloch.</summary>
    public int Id { get; set; }
    
    /// <summary>Nom r√¥le technique (admin/user/client) pour logique m√©tier.</summary>
    public string Name { get; set; } = string.Empty;
    
    /// <summary>Description m√©tier d√©taill√©e capacit√©s et restrictions r√¥le.</summary>
    public string? Description { get; set; }
    
    /// <summary>Date cr√©ation UTC r√¥le pour audit trail syst√®me.</summary>
    public DateTime CreatedAt { get; set; }
}

/// <summary>
/// DTO cr√©ation nouveau r√¥le syst√®me avec validations strictes.
/// Assure coh√©rence architecture permissions et nomenclature standard.
/// </summary>
public class CreateRoleDto
{
    /// <summary>Nom r√¥le OBLIGATOIRE unique dans syst√®me permissions.</summary>
    [Required(ErrorMessage = "Le nom du r√¥le est obligatoire")]
    [StringLength(100, ErrorMessage = "Le nom du r√¥le ne peut pas d√©passer 100 caract√®res")]
    public string Name { get; set; } = string.Empty;

    /// <summary>Description m√©tier optionnelle pour contexte r√¥le.</summary>
    [StringLength(255, ErrorMessage = "La description ne peut pas d√©passer 255 caract√®res")]
    public string? Description { get; set; }
}

/// <summary>
/// DTO modification r√¥le existant pour √©volution architecture permissions.
/// Champs optionnels pour modification s√©lective sans impact global.
/// </summary>
public class UpdateRoleDto
{
    /// <summary>Nom r√¥le modifiable avec validation longueur maintenue.</summary>
    [StringLength(100, ErrorMessage = "Le nom du r√¥le ne peut pas d√©passer 100 caract√®res")]
    public string? Name { get; set; }

    /// <summary>Description modifiable pour √©volution contexte m√©tier.</summary>
    [StringLength(255, ErrorMessage = "La description ne peut pas d√©passer 255 caract√®res")]
    public string? Description { get; set; }
}

/// <summary>
/// DTO association utilisateur-r√¥le avec contexte client sp√©cifique.
/// Relation granulaire permissions par utilisateur et p√©rim√®tre m√©tier.
/// Support architecture r√¥les contextuels StartingBloch.
/// </summary>
public class UserRoleDto
{
    /// <summary>Identifiant unique association user-role-client.</summary>
    public int Id { get; set; }
    
    /// <summary>Identifiant utilisateur b√©n√©ficiaire r√¥le.</summary>
    public int UserId { get; set; }
    
    /// <summary>Identifiant r√¥le accord√© (admin/user/client).</summary>
    public int RoleId { get; set; }
    
    /// <summary>Identifiant client p√©rim√®tre si r√¥le contextuel.</summary>
    public int? ClientId { get; set; }
    
    /// <summary>Entit√© utilisateur compl√®te (chargement optionnel).</summary>
    public UserDto? User { get; set; }
    
    /// <summary>Entit√© r√¥le compl√®te (chargement optionnel).</summary>
    public RoleDto? Role { get; set; }
    
    /// <summary>Entit√© client p√©rim√®tre (chargement optionnel).</summary>
    public ClientDto? Client { get; set; }
    
    /// <summary>Date cr√©ation UTC association pour audit trail.</summary>
    public DateTime CreatedAt { get; set; }
}

/// <summary>
/// DTO assignation r√¥le utilisateur avec permissions granulaires.
/// Configuration droits contextuels selon architecture s√©curit√© StartingBloch.
/// Support permissions sp√©cialis√©es par p√©rim√®tre client.
/// </summary>
public class AssignRoleDto
{
    /// <summary>Utilisateur destinataire OBLIGATOIRE pour assignation.</summary>
    [Required(ErrorMessage = "L'ID de l'utilisateur est obligatoire")]
    public int UserId { get; set; }

    /// <summary>R√¥le accord√© OBLIGATOIRE (admin/user/client).</summary>
    [Required(ErrorMessage = "L'ID du r√¥le est obligatoire")]
    public int RoleId { get; set; }

    /// <summary>Client p√©rim√®tre OBLIGATOIRE pour r√¥les "client", null pour admin/user.</summary>
    public int? ClientId { get; set; }
    
    /// <summary>Permission lecture sp√©cifique pour configuration granulaire.</summary>
    public bool? CanRead { get; set; }
    
    /// <summary>Permission √©criture sp√©cifique pour configuration granulaire.</summary>
    public bool? CanWrite { get; set; }
}

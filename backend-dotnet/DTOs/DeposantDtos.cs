/*
 * ================================================================================================
 * DTOs D√âPOSANTS - ENTIT√âS L√âGALES D√âP√îT BREVETS
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * G√®re transfert donn√©es d√©posants l√©gaux responsables proc√©dures brevets.
 * Entit√©s habilit√©es effectuer formalit√©s administratives aupr√®s offices brevets.
 * 
 * R√îLE JURIDIQUE :
 * ===============
 * üìã D√âPOSANT ‚Üí Entit√© l√©gale effectuant d√©p√¥t officiel brevet
 * üåç MULTI-PAYS ‚Üí Relation Many-to-Many pour d√©p√¥ts internationaux
 * üìß COMMUNICATION ‚Üí Contact direct pour notifications offices
 * ‚öñÔ∏è RESPONSABILIT√â ‚Üí Engagement l√©gal proc√©dures et taxes
 * 
 * VALIDATIONS L√âGALES :
 * ====================
 * ‚úÖ Nom obligatoire (identification l√©gale)
 * ‚úÖ Email valid√© (communications officielles)
 * ‚úÖ Relations pays multiples (juridictions)
 * ‚úÖ Coh√©rence donn√©es personnelles/morales
 * 
 * ================================================================================================
 */

using System.ComponentModel.DataAnnotations;

namespace StartingBloch.Backend.DTOs;

/// <summary>
/// DTO d√©posant complet avec pays juridictions pour affichage consultation.
/// Entit√© l√©gale responsable d√©p√¥t brevets avec comp√©tences g√©ographiques.
/// Inclut relations pays pour vision compl√®te capacit√©s juridictionnelles.
/// </summary>
public class DeposantDto
{
    /// <summary>
    /// Identifiant unique d√©posant dans syst√®me StartingBloch.
    /// Cl√© primaire pour toutes relations et responsabilit√©s l√©gales.
    /// </summary>
    public int Id { get; set; }
    
    /// <summary>
    /// Nom d√©posant OBLIGATOIRE - d√©nomination l√©gale officielle.
    /// Identification principale pour formalit√©s administratives brevets.
    /// </summary>
    public string Nom { get; set; } = string.Empty;
    
    /// <summary>
    /// Pr√©nom d√©posant optionnel si personne physique.
    /// Compl√©ment identification pour d√©posants individuels.
    /// </summary>
    public string? Prenom { get; set; }
    
    /// <summary>
    /// Email d√©posant optionnel pour communications officielles.
    /// Canal direct notifications offices brevets et proc√©dures.
    /// </summary>
    public string? Email { get; set; }
    
    /// <summary>
    /// Liste pays juridictions o√π d√©posant peut effectuer d√©p√¥ts.
    /// Relation Many-to-Many d√©finit comp√©tences g√©ographiques l√©gales.
    /// </summary>
    public List<PaysDto> Pays { get; set; } = new();
}

/// <summary>
/// DTO cr√©ation nouveau d√©posant avec validations l√©gales strictes.
/// Assure conformit√© identification et qualit√© donn√©es proc√©durales.
/// Base solide √©tablissement responsabilit√©s juridiques futures.
/// </summary>
public class CreateDeposantDto
{
    /// <summary>
    /// Nom d√©posant OBLIGATOIRE - d√©nomination l√©gale pour d√©p√¥ts.
    /// Validation stricte conformit√© identification officielle.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le nom ne peut pas d√©passer 100 caract√®res")]
    public string Nom { get; set; } = string.Empty;

    /// <summary>
    /// Pr√©nom d√©posant optionnel si personne physique d√©posante.
    /// Compl√©ment identification individuelle selon contexte juridique.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le pr√©nom ne peut pas d√©passer 100 caract√®res")]
    public string? Prenom { get; set; }

    /// <summary>
    /// Email d√©posant optionnel avec validation format strict.
    /// Canal communication directe avec offices brevets internationaux.
    /// </summary>
    [EmailAddress(ErrorMessage = "Format d'email invalide")]
    [StringLength(255, ErrorMessage = "L'email ne peut pas d√©passer 255 caract√®res")]
    public string? Email { get; set; }
}

/// <summary>
/// DTO modification d√©posant existant avec contraintes l√©gales maintenues.
/// Pr√©serve validations identification pour continuit√© proc√©dures.
/// Permet √©volution donn√©es contact sans affecter responsabilit√©s.
/// </summary>
public class UpdateDeposantDto
{
    /// <summary>
    /// Nom d√©posant OBLIGATOIRE maintenu en modification.
    /// Identification l√©gale ne peut √™tre supprim√©e pour continuit√© proc√©dures.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le nom ne peut pas d√©passer 100 caract√®res")]
    public string Nom { get; set; } = string.Empty;

    /// <summary>
    /// Pr√©nom d√©posant modifiable pour corrections identification.
    /// Mise √† jour flexible selon √©volutions statut juridique.
    /// </summary>
    [StringLength(100, ErrorMessage = "Le pr√©nom ne peut pas d√©passer 100 caract√®res")]
    public string? Prenom { get; set; }

    /// <summary>
    /// Email d√©posant modifiable avec validation format maintenue.
    /// Actualisation canal communication officielle avec offices.
    /// </summary>
    [EmailAddress(ErrorMessage = "Format d'email invalide")]
    [StringLength(255, ErrorMessage = "L'email ne peut pas d√©passer 255 caract√®res")]
    public string? Email { get; set; }
}

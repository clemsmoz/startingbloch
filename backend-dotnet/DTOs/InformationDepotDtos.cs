/*
 * ================================================================================================
 * DTOs INFORMATIONS D√âP√îT - DONN√âES PROC√âDURALES BREVETS
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * G√®re transfert donn√©es proc√©durales d√©p√¥ts brevets par juridiction.
 * Suivi complet lifecycle administratif depuis d√©p√¥t jusqu'√† d√©livrance.
 * 
 * DONN√âES PROC√âDURALES :
 * =====================
 * üìã NUM√âROS OFFICIELS ‚Üí D√©p√¥t, Publication, D√©livrance par office
 * üìÖ DATES CRITIQUES ‚Üí Timeline proc√©dure avec deadlines l√©gales
 * üåç JURIDICTION ‚Üí Pays/office comp√©tent pour proc√©dure
 * üìä STATUT ‚Üí √âtat avancement proc√©dure (en cours, accord√©, rejet√©)
 * üìÑ LICENCE ‚Üí Indicateur disponibilit√© licensing
 * 
 * COMPLIANCE INTERNATIONALE :
 * ==========================
 * ‚úÖ Standards offices brevets internationaux
 * ‚úÖ Num√©rotation officielle normalis√©e
 * ‚úÖ Dates proc√©durales pr√©cises UTC
 * ‚úÖ Statuts harmonis√©s syst√®mes nationaux
 * 
 * ================================================================================================
 */

using System.ComponentModel.DataAnnotations;

namespace StartingBloch.Backend.DTOs;

/// <summary>
/// DTO information d√©p√¥t compl√®te avec donn√©es proc√©durales et relations.
/// D√©tails complets proc√©dure brevet dans juridiction sp√©cifique.
/// Inclut timeline administrative et statut avancement officiel.
/// </summary>
public class InformationDepotDto
{
    /// <summary>Identifiant unique information d√©p√¥t syst√®me.</summary>
    public int Id { get; set; }
    
    /// <summary>Identifiant brevet parent pour relation One-to-Many.</summary>
    public int IdBrevet { get; set; }
    
    /// <summary>Identifiant pays juridiction d√©p√¥t (optionnel).</summary>
    public int? IdPays { get; set; }
    
    /// <summary>Identifiant statut proc√©dure actuel (optionnel).</summary>
    public int? IdStatuts { get; set; }
    
    /// <summary>Num√©ro officiel d√©p√¥t attribu√© par office brevets.</summary>
    public string? NumeroDepot { get; set; }
    
    /// <summary>Num√©ro officiel publication si proc√©dure avanc√©e.</summary>
    public string? NumeroPublication { get; set; }
    
    /// <summary>Num√©ro officiel d√©livrance si brevet accord√©.</summary>
    public string? NumeroDelivrance { get; set; }
    
    /// <summary>Date officielle d√©p√¥t UTC pour priorit√© l√©gale.</summary>
    public DateTime? DateDepot { get; set; }
    
    /// <summary>Date officielle publication UTC si applicable.</summary>
    public DateTime? DatePublication { get; set; }
    
    /// <summary>Date officielle d√©livrance UTC si brevet accord√©.</summary>
    public DateTime? DateDelivrance { get; set; }
    
    /// <summary>Indicateur disponibilit√© licence exploitation commerciale.</summary>
    public bool Licence { get; set; }
    
    /// <summary>Commentaires proc√©duraux libres pour contexte.</summary>
    public string? Commentaire { get; set; }
    
    /// <summary>Date cr√©ation UTC information pour audit trail.</summary>
    public DateTime CreatedAt { get; set; }
    
    /// <summary>Date modification UTC information pour tra√ßabilit√©.</summary>
    public DateTime UpdatedAt { get; set; }

    /// <summary>Entit√© pays juridiction compl√®te (chargement optionnel).</summary>
    public PaysDto? Pays { get; set; }
    
    /// <summary>Entit√© statut proc√©dure compl√®te (chargement optionnel).</summary>
    public StatutDto? Statuts { get; set; }

    // Cabinets par information de d√©p√¥t
    public List<InformationDepotCabinetItemDto> CabinetsAnnuites { get; set; } = new();
    public List<InformationDepotCabinetItemDto> CabinetsProcedures { get; set; } = new();
}

/// <summary>
/// DTO cr√©ation nouvelle information d√©p√¥t avec donn√©es proc√©durales.
/// Enregistrement initial proc√©dure brevet dans juridiction sp√©cifique.
/// Licence d√©sactiv√©e par d√©faut - activation explicite si pertinente.
/// </summary>
public class CreateInformationDepotDto
{
    /// <summary>Pays juridiction d√©p√¥t pour localisation proc√©dure.</summary>
    public int? IdPays { get; set; }
    
    /// <summary>Statut initial proc√©dure si connu d√®s cr√©ation.</summary>
    public int? IdStatuts { get; set; }

    /// <summary>Num√©ro d√©p√¥t officiel avec validation longueur standard.</summary>
    [StringLength(100, ErrorMessage = "Le num√©ro de d√©p√¥t ne peut pas d√©passer 100 caract√®res")]
    public string? NumeroDepot { get; set; }

    /// <summary>Num√©ro publication si disponible lors cr√©ation.</summary>
    [StringLength(100, ErrorMessage = "Le num√©ro de publication ne peut pas d√©passer 100 caract√®res")]
    public string? NumeroPublication { get; set; }

    /// <summary>Num√©ro d√©livrance si brevet d√©j√† accord√© lors cr√©ation.</summary>
    [StringLength(100, ErrorMessage = "Le num√©ro de d√©livrance ne peut pas d√©passer 100 caract√®res")]
    public string? NumeroDelivrance { get; set; }

    /// <summary>Date d√©p√¥t officielle pour √©tablissement priorit√©.</summary>
    public DateTime? DateDepot { get; set; }
    
    /// <summary>Date publication officielle si proc√©dure avanc√©e.</summary>
    public DateTime? DatePublication { get; set; }
    
    /// <summary>Date d√©livrance officielle si brevet accord√©.</summary>
    public DateTime? DateDelivrance { get; set; }
    
    /// <summary>Licence d√©sactiv√©e par d√©faut - activation explicite ult√©rieure.</summary>
    public bool Licence { get; set; } = false;
    
    /// <summary>Commentaires contextuels proc√©dure avec validation longueur.</summary>
    [StringLength(500, ErrorMessage = "Le commentaire ne peut pas d√©passer 500 caract√®res")]
    public string? Commentaire { get; set; }

    // Cr√©ation: cabinets rattach√©s √† cette info de d√©p√¥t
    public List<InformationDepotCabinetInputDto> CabinetsAnnuites { get; set; } = new();
    public List<InformationDepotCabinetInputDto> CabinetsProcedures { get; set; } = new();
}

/// <summary>
/// DTO modification information d√©p√¥t pour √©volution proc√©dure.
/// Mise √† jour donn√©es administratives selon avancement officiel.
/// </summary>
public class UpdateInformationDepotDto
{
    /// <summary>Identifiant information d√©p√¥t √† modifier.</summary>
    public int Id { get; set; }
    
    /// <summary>Pays juridiction modifiable pour corrections.</summary>
    public int? IdPays { get; set; }
    
    /// <summary>Statut proc√©dure modifiable selon √©volution.</summary>
    public int? IdStatuts { get; set; }

    /// <summary>Num√©ro d√©p√¥t modifiable pour corrections officielles.</summary>
    [StringLength(100, ErrorMessage = "Le num√©ro de d√©p√¥t ne peut pas d√©passer 100 caract√®res")]
    public string? NumeroDepot { get; set; }

    /// <summary>Num√©ro publication modifiable lors avancement proc√©dure.</summary>
    [StringLength(100, ErrorMessage = "Le num√©ro de publication ne peut pas d√©passer 100 caract√®res")]
    public string? NumeroPublication { get; set; }

    /// <summary>Num√©ro d√©livrance modifiable lors accord brevet.</summary>
    [StringLength(100, ErrorMessage = "Le num√©ro de d√©livrance ne peut pas d√©passer 100 caract√®res")]
    public string? NumeroDelivrance { get; set; }

    /// <summary>Date d√©p√¥t modifiable pour corrections administratives.</summary>
    public DateTime? DateDepot { get; set; }
    
    /// <summary>Date publication modifiable selon notifications officielles.</summary>
    public DateTime? DatePublication { get; set; }
    
    /// <summary>Date d√©livrance modifiable lors finalisation proc√©dure.</summary>
    public DateTime? DateDelivrance { get; set; }
    
    /// <summary>Licence modifiable selon strat√©gie commerciale √©volutive.</summary>
    public bool Licence { get; set; } = false;
}

public class InformationDepotCabinetItemDto
{
    public int CabinetId { get; set; }
    public string? CabinetNom { get; set; }
    public List<string> Roles { get; set; } = new();
    public List<ContactDto> Contacts { get; set; } = new();
}

public class InformationDepotCabinetInputDto
{
    public int CabinetId { get; set; }
    public List<string> Roles { get; set; } = new();
    public List<int> ContactIds { get; set; } = new();
}

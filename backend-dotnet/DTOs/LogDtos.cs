/*
 * ================================================================================================
 * DTOs LOGS - AUDIT TRAIL ET TRA√áABILIT√â SYST√àME
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * G√®re transfert donn√©es logs syst√®me pour audit trail RGPD et s√©curit√©.
 * Tra√ßabilit√© compl√®te actions utilisateurs et op√©rations critiques brevets.
 * 
 * NIVEAUX AUDIT :
 * ==============
 * üìã SYSTEM LOGS ‚Üí Messages syst√®me, erreurs, warnings
 * üë§ USER ACTIONS ‚Üí Tra√ßabilit√© actions utilisateurs RGPD
 * üîí SECURITY ‚Üí Tentatives acc√®s, authentifications
 * üìä DATA CHANGES ‚Üí Modifications entit√©s avec before/after
 * üåê REQUEST LOGS ‚Üí IP, UserAgent, g√©olocalisation
 * 
 * COMPLIANCE L√âGALE :
 * ==================
 * ‚úÖ RGPD - Tra√ßabilit√© acc√®s donn√©es personnelles
 * ‚úÖ Audit trail modifications brevets
 * ‚úÖ S√©curit√© - D√©tection intrusions
 * ‚úÖ Debugging - Support technique avanc√©
 * 
 * ================================================================================================
 */

namespace StartingBloch.Backend.DTOs;

/// <summary>
/// DTO log complet avec toutes m√©tadonn√©es audit trail et s√©curit√©.
/// Enregistrement exhaustif pour compliance RGPD et tra√ßabilit√© syst√®me.
/// Support debugging, s√©curit√© et audit m√©tier propri√©t√© intellectuelle.
/// </summary>
public class LogDto
{
    /// <summary>Identifiant unique log dans syst√®me audit trail.</summary>
    public int Id { get; set; }
    
    /// <summary>Message principal log pour compr√©hension contexte.</summary>
    public string? Message { get; set; }
    
    /// <summary>Niveau log (INFO, WARN, ERROR, DEBUG) pour filtrage.</summary>
    public string? Level { get; set; }
    
    /// <summary>D√©tails exception compl√®te si erreur syst√®me.</summary>
    public string? Exception { get; set; }
    
    /// <summary>Propri√©t√©s structur√©es JSON pour contexte m√©tier.</summary>
    public string? Properties { get; set; }
    
    /// <summary>Timestamp UTC pr√©cis √©v√©nement pour chronologie.</summary>
    public DateTime TimeStamp { get; set; }
    
    /// <summary>Logger source √©metteur pour tra√ßage composant.</summary>
    public string? Logger { get; set; }
    
    /// <summary>Callsite code source pour debugging pr√©cis.</summary>
    public string? Callsite { get; set; }
    
    /// <summary>Identifiant utilisateur responsable action si applicable.</summary>
    public int? UserId { get; set; }
    
    /// <summary>Nom table affect√©e pour audit donn√©es sp√©cifique.</summary>
    public string? TableName { get; set; }
    
    /// <summary>Identifiant enregistrement modifi√© pour tra√ßage pr√©cis.</summary>
    public int? RecordId { get; set; }
    
    /// <summary>Adresse IP origine pour g√©olocalisation et s√©curit√©.</summary>
    public string? IpAddress { get; set; }
    
    /// <summary>User Agent navigateur pour identification client.</summary>
    public string? UserAgent { get; set; }
    
    /// <summary>Action m√©tier effectu√©e (CREATE, UPDATE, DELETE, READ).</summary>
    public string? Action { get; set; }
    
    /// <summary>Valeurs avant modification JSON pour audit trail.</summary>
    public string? OldValues { get; set; }
    
    /// <summary>Valeurs apr√®s modification JSON pour audit trail.</summary>
    public string? NewValues { get; set; }
    
    /// <summary>Date cr√©ation UTC log pour audit chronologique.</summary>
    public DateTime CreatedAt { get; set; }
}

/// <summary>
/// DTO cr√©ation log simple pour enregistrement √©v√©nements syst√®me.
/// Version all√©g√©e focus message principal et contexte minimal.
/// </summary>
public class CreateLogDto
{
    /// <summary>Message log principal obligatoire pour compr√©hension.</summary>
    public string Message { get; set; } = string.Empty;
    
    /// <summary>Niveau log optionnel pour classification automatique.</summary>
    public string? Level { get; set; }
    
    /// <summary>Exception optionnelle si contexte erreur √† tracer.</summary>
    public string? Exception { get; set; }
    
    /// <summary>Logger source optionnel pour identification composant.</summary>
    public string? Logger { get; set; }
    
    /// <summary>Utilisateur responsable optionnel pour audit trail.</summary>
    public int? UserId { get; set; }
}

/*
 * ================================================================================================
 * INTERFACE SERVICE D√âPOSANTS - CONTRAT GESTION INVENTEURS ET D√âPOSANTS PI
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * Interface contrat service d√©posants StartingBloch d√©finissant gestion cr√©ateurs PI.
 * Sp√©cification m√©thodes administration d√©posants avec nationalit√©s multiples.
 * 
 * FONCTIONNALIT√âS CONTRACTUELLES :
 * ================================
 * üìã CONSULTATION ‚Üí R√©cup√©ration d√©posants avec pagination et recherche
 * üîç D√âTAIL ‚Üí Acc√®s d√©posant sp√©cifique avec nationalit√©s compl√®tes
 * ‚ûï CR√âATION ‚Üí Nouveau d√©posant avec gestion pays
 * ‚úèÔ∏è MODIFICATION ‚Üí Mise √† jour informations d√©posant
 * üóëÔ∏è SUPPRESSION ‚Üí Suppression d√©posant avec audit
 * üåç NATIONALIT√âS ‚Üí Gestion pays multiples d√©posant
 * üîó RELATIONS ‚Üí Assignation/retrait pays Many-to-Many
 * 
 * GESTION NATIONALIT√âS MULTIPLES :
 * ===============================
 * üåç PAYS ‚Üí R√©cup√©ration nationalit√©s d√©posant sp√©cifique
 * ‚ûï ASSIGNATION ‚Üí Attribution nouvelle nationalit√©
 * ‚ùå RETRAIT ‚Üí Suppression nationalit√© existante
 * üîÑ GESTION ‚Üí Administration relations Many-to-Many
 * 
 * DONN√âES D√âPOSANTS G√âR√âES :
 * =========================
 * üë§ IDENTIT√â ‚Üí Nom, pr√©nom, coordonn√©es personnelles
 * üìß COMMUNICATION ‚Üí Email contact principal
 * üåç G√âOLOCALISATION ‚Üí Pays nationalit√©s multiples
 * üîó RELATIONS ‚Üí Liens avec brevets d√©pos√©s
 * üïê AUDIT ‚Üí Dates cr√©ation, modification, historique
 * 
 * RECHERCHE ET FILTRAGE :
 * ======================
 * ‚úÖ Recherche textuelle multi-champs (nom, pr√©nom, email)
 * ‚úÖ Filtrage par pays ou nationalit√©
 * ‚úÖ Pagination optimis√©e grandes collections
 * ‚úÖ Tri alphab√©tique par d√©faut
 * 
 * CONFORMIT√â INTERNATIONALE :
 * ==========================
 * ‚úÖ Standards OMPI (Organisation Mondiale Propri√©t√© Intellectuelle)
 * ‚úÖ Relations Many-to-Many avec pays via table liaison
 * ‚úÖ Validation existence pays r√©f√©rentiels
 * ‚úÖ Audit trail complet modifications
 * 
 * CONFORMIT√â ARCHITECTURALE :
 * ==========================
 * ‚úÖ Pattern Repository avec abstraction compl√®te
 * ‚úÖ Injection d√©pendances via interface
 * ‚úÖ S√©paration responsabilit√©s m√©tier/donn√©es
 * ‚úÖ Testabilit√© maximale via contrats
 * ‚úÖ √âvolutivit√© garantie par d√©couplage
 * 
 * ================================================================================================
 */

using StartingBloch.Backend.DTOs;

namespace StartingBloch.Backend.Services;

/// <summary>
/// Interface service m√©tier gestion d√©posants et inventeurs propri√©t√© intellectuelle.
/// Contrat complet op√©rations CRUD avec gestion nationalit√©s multiples s√©curis√©es.
/// </summary>
public interface IDeposantService
{
    /// <summary>
    /// R√©cup√®re liste pagin√©e d√©posants avec recherche textuelle multi-champs.
    /// Support recherche nom, pr√©nom, email avec nationalit√©s compl√®tes.
    /// </summary>
    /// <param name="page">Num√©ro page pour pagination (1 par d√©faut)</param>
    /// <param name="pageSize">Taille page pour limitation r√©sultats (10 par d√©faut)</param>
    /// <param name="search">Terme recherche optionnel multi-champs</param>
    /// <returns>R√©ponse pagin√©e d√©posants avec pays nationalit√©s</returns>
    Task<PagedResponse<List<DeposantDto>>> GetDeposaatsAsync(int page = 1, int pageSize = 10, string? search = null);
    
    /// <summary>
    /// R√©cup√®re d√©posant sp√©cifique avec nationalit√©s compl√®tes d√©taill√©es.
    /// Chargement optimis√© d√©posant avec pays multiples associ√©s.
    /// </summary>
    /// <param name="id">Identifiant unique d√©posant recherch√©</param>
    /// <returns>D√©posant d√©taill√© avec liste pays nationalit√©s</returns>
    Task<ApiResponse<DeposantDto>> GetDeposantByIdAsync(int id);
    
    /// <summary>
    /// Cr√©e nouveau d√©posant avec informations de base et audit trail.
    /// Initialisation d√©posant sans pays, assignation ult√©rieure via m√©thodes.
    /// </summary>
    /// <param name="createDeposantDto">Donn√©es cr√©ation d√©posant de base</param>
    /// <returns>D√©posant cr√©√© avec identifiant syst√®me g√©n√©r√©</returns>
    Task<ApiResponse<DeposantDto>> CreateDeposantAsync(CreateDeposantDto createDeposantDto);
    
    /// <summary>
    /// Met √† jour d√©posant existant avec nouvelles informations personnelles.
    /// Modification informations de base, gestion pays via m√©thodes sp√©cialis√©es.
    /// </summary>
    /// <param name="id">Identifiant d√©posant √† modifier</param>
    /// <param name="updateDeposantDto">Nouvelles donn√©es personnelles d√©posant</param>
    /// <returns>D√©posant modifi√© avec informations mises √† jour</returns>
    Task<ApiResponse<DeposantDto>> UpdateDeposantAsync(int id, UpdateDeposantDto updateDeposantDto);
    
    /// <summary>
    /// Supprime d√©posant avec gestion relations pays d√©pendantes.
    /// V√©rification contraintes avant suppression d√©finitive d√©posant.
    /// </summary>
    /// <param name="id">Identifiant d√©posant √† supprimer</param>
    /// <returns>Confirmation succ√®s suppression avec audit trail</returns>
    Task<ApiResponse<bool>> DeleteDeposantAsync(int id);
    
    /// <summary>
    /// R√©cup√®re liste compl√®te pays nationalit√©s d√©posant sp√©cifique.
    /// Chargement optimis√© nationalit√©s multiples avec d√©tails pays.
    /// </summary>
    /// <param name="deposantId">Identifiant d√©posant pour recherche pays</param>
    /// <returns>Liste pays nationalit√©s avec codes ISO complets</returns>
    Task<ApiResponse<List<PaysDto>>> GetDeposantPaysAsync(int deposantId);
    
    /// <summary>
    /// Assigne nouvelle nationalit√© √† d√©posant avec validation unicit√©.
    /// Cr√©ation relation Many-to-Many s√©curis√©e avec v√©rification existence.
    /// </summary>
    /// <param name="deposantId">Identifiant d√©posant cible assignation</param>
    /// <param name="paysId">Identifiant pays √† assigner comme nationalit√©</param>
    /// <returns>Confirmation succ√®s assignation pays d√©posant</returns>
    Task<ApiResponse<bool>> AssignPaysToDeposantAsync(int deposantId, int paysId);
    
    /// <summary>
    /// Retire nationalit√© d√©posant avec validation existence relation.
    /// Suppression relation Many-to-Many avec v√©rification pr√©alable.
    /// </summary>
    /// <param name="deposantId">Identifiant d√©posant cible retrait</param>
    /// <param name="paysId">Identifiant pays √† retirer des nationalit√©s</param>
    /// <returns>Confirmation succ√®s retrait pays d√©posant</returns>
    Task<ApiResponse<bool>> RemovePaysFromDeposantAsync(int deposantId, int paysId);
}

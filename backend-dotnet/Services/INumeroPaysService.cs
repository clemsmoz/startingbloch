/*
 * ================================================================================================
 * INTERFACE SERVICE NUM√âROS PAYS - CONTRAT GESTION CODES BREVETS NATIONAUX
 * ================================================================================================
 * 
 * OBJECTIF M√âTIER :
 * Interface contrat service num√©ros pays StartingBloch d√©finissant gestion codes brevets.
 * Sp√©cification m√©thodes administration num√©rotation brevets par juridiction nationale.
 * 
 * FONCTIONNALIT√âS CONTRACTUELLES :
 * ================================
 * üìã CONSULTATION ‚Üí R√©cup√©ration num√©ros avec pagination et recherche
 * üîç D√âTAIL ‚Üí Acc√®s num√©ro sp√©cifique avec validation
 * ‚ûï CR√âATION ‚Üí Nouveau num√©ro avec validation format
 * ‚úèÔ∏è MODIFICATION ‚Üí Mise √† jour num√©ro existant
 * üóëÔ∏è SUPPRESSION ‚Üí Suppression num√©ro avec audit
 * üåç PAYS ‚Üí Filtrage num√©ros par juridiction
 * ‚úÖ VALIDATION ‚Üí Contr√¥le format selon pays
 * 
 * GESTION NUM√âROTATION INTERNATIONALE :
 * ====================================
 * üá´üá∑ FRANCE ‚Üí Format INPI fran√ßais (ex: FR3012345)
 * üá∫üá∏ USA ‚Üí Format USPTO am√©ricain (ex: US10,123,456)
 * üá™üá∫ EUROPE ‚Üí Format OEB europ√©en (ex: EP3456789)
 * üá¨üáß UK ‚Üí Format UKIPO britannique (ex: GB2345678)
 * üåç INTERNATIONAL ‚Üí Format PCT/OMPI (ex: WO2023/123456)
 * 
 * VALIDATION FORMATS NATIONAUX :
 * ==============================
 * ‚úÖ Contr√¥le syntaxe selon juridiction
 * ‚úÖ Validation caract√®res autoris√©s
 * ‚úÖ V√©rification longueur r√©glementaire
 * ‚úÖ Contr√¥le coh√©rence pr√©fixes pays
 * ‚úÖ D√©tection doublons par juridiction
 * 
 * RECHERCHE ET FILTRAGE :
 * ======================
 * ‚úÖ Pagination optimis√©e grandes collections
 * ‚úÖ Recherche textuelle dans num√©ros
 * ‚úÖ Filtrage par pays/juridiction
 * ‚úÖ Tri par date cr√©ation/num√©ro
 * 
 * CONFORMIT√â INTERNATIONALE :
 * ==========================
 * ‚úÖ Standards OMPI (Organisation Mondiale Propri√©t√© Intellectuelle)
 * ‚úÖ Conventions Paris/PCT pour num√©rotation
 * ‚úÖ Normes ISO pour codes pays
 * ‚úÖ R√®gles nationales sp√©cifiques
 * 
 * INT√âGRIT√â DONN√âES :
 * ==================
 * ‚úÖ Relations r√©f√©rentielles avec pays
 * ‚úÖ Contraintes unicit√© par juridiction
 * ‚úÖ Validation existence pays avant assignation
 * ‚úÖ Audit trail modifications num√©ros
 * 
 * CONFORMIT√â ARCHITECTURALE :
 * ==========================
 * ‚úÖ Pattern Repository avec abstraction compl√®te
 * ‚úÖ Injection d√©pendances via interface
 * ‚úÖ S√©paration responsabilit√©s m√©tier/donn√©es
 * ‚úÖ Testabilit√© maximale via contrats
 * ‚úÖ √âvolutivit√© garantie par d√©couplage
 * 
 * ================================================================================================
 */

using StartingBloch.Backend.DTOs;

namespace StartingBloch.Backend.Services;

/// <summary>
/// Interface service m√©tier gestion num√©rotation brevets par juridictions nationales.
/// Contrat complet validation formats nationaux avec recherche optimis√©e.
/// </summary>
public interface INumeroPaysService
{
    /// <summary>
    /// R√©cup√®re liste pagin√©e num√©ros pays avec recherche textuelle.
    /// Support filtrage par num√©ro, pays avec validation formats.
    /// </summary>
    /// <param name="page">Num√©ro page pour pagination (1 par d√©faut)</param>
    /// <param name="pageSize">Taille page pour limitation r√©sultats (10 par d√©faut)</param>
    /// <param name="search">Terme recherche optionnel dans num√©ros</param>
    /// <returns>R√©ponse pagin√©e num√©ros avec d√©tails juridictions</returns>
    Task<PagedResponse<List<NumeroPaysDto>>> GetNumeroPaysAsync(int page = 1, int pageSize = 10, string? search = null);
    
    /// <summary>
    /// R√©cup√®re num√©ro pays sp√©cifique avec validation et d√©tails.
    /// Chargement optimis√© num√©ro avec informations juridiction compl√®tes.
    /// </summary>
    /// <param name="id">Identifiant unique num√©ro pays recherch√©</param>
    /// <returns>Num√©ro d√©taill√© avec validation format ou erreur</returns>
    Task<ApiResponse<NumeroPaysDto>> GetNumeroPaysByIdAsync(int id);
    
    /// <summary>
    /// Cr√©e nouveau num√©ro pays avec validation format juridiction.
    /// Contr√¥le syntaxe selon r√®gles nationales et unicit√©.
    /// </summary>
    /// <param name="createNumeroPaysDto">Donn√©es cr√©ation num√©ro avec pays</param>
    /// <returns>Num√©ro cr√©√© avec validation format confirm√©e</returns>
    Task<ApiResponse<NumeroPaysDto>> CreateNumeroPaysAsync(CreateNumeroPaysDto createNumeroPaysDto);
    
    /// <summary>
    /// Met √† jour num√©ro pays existant avec revalidation format.
    /// Modification num√©ro avec contr√¥le coh√©rence juridiction.
    /// </summary>
    /// <param name="id">Identifiant num√©ro √† modifier</param>
    /// <param name="updateNumeroPaysDto">Nouvelles donn√©es num√©ro</param>
    /// <returns>Num√©ro modifi√© avec validation mise √† jour</returns>
    Task<ApiResponse<NumeroPaysDto>> UpdateNumeroPaysAsync(int id, UpdateNumeroPaysDto updateNumeroPaysDto);
    
    /// <summary>
    /// Supprime num√©ro pays avec v√©rification d√©pendances brevets.
    /// Contr√¥le utilisation avant suppression d√©finitive.
    /// </summary>
    /// <param name="id">Identifiant num√©ro √† supprimer</param>
    /// <returns>Confirmation succ√®s suppression avec audit</returns>
    Task<ApiResponse<bool>> DeleteNumeroPaysAsync(int id);
    
    /// <summary>
    /// R√©cup√®re num√©ros associ√©s √† pays sp√©cifique (m√©thode dupliqu√©e).
    /// Filtrage num√©ros par juridiction avec formats valid√©s.
    /// </summary>
    /// <param name="paysId">Identifiant pays pour filtrage num√©ros</param>
    /// <returns>Liste num√©ros pays avec formats valid√©s</returns>
    Task<ApiResponse<List<NumeroPaysDto>>> GetNumeroPayssByPaysIdAsync(int paysId);
    
    /// <summary>
    /// R√©cup√®re num√©ros associ√©s √† pays sp√©cifique.
    /// Filtrage num√©ros par juridiction avec formats valid√©s.
    /// </summary>
    /// <param name="paysId">Identifiant pays pour filtrage num√©ros</param>
    /// <returns>Liste num√©ros pays avec formats valid√©s</returns>
    Task<ApiResponse<List<NumeroPaysDto>>> GetNumeroPaysByPaysIdAsync(int paysId);
    
    /// <summary>
    /// Valide format num√©ro selon r√®gles juridiction sp√©cifique.
    /// Contr√¥le syntaxe, longueur, caract√®res selon standards nationaux.
    /// </summary>
    /// <param name="numero">Num√©ro √† valider selon format pays</param>
    /// <param name="paysId">Identifiant pays pour r√®gles validation</param>
    /// <returns>Statut validation format selon juridiction</returns>
    Task<ApiResponse<bool>> ValidateNumeroForPaysAsync(string numero, int paysId);
}
